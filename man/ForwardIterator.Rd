% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Iterator.R
\name{ForwardIterator}
\alias{ForwardIterator}
\title{Build an efficient iterator over loci}
\usage{
ForwardIterator(
  pars,
  ram.ckpts = 1L,
  targets = 1:kalis:::pkgVars$L,
  base.fwd.table = NULL,
  disk.ckpts = 0,
  disk.dir = NULL,
  from_recipient = 1,
  to_recipient = Inf,
  lookup.tables = NULL,
  cache = NULL,
  save.cache = FALSE,
  exact = TRUE,
  force.unif = FALSE
)
}
\arguments{
\item{ram.ckpts}{an integer specifying the number of checkpoints to store in RAM}

\item{targets}{a vector of loci to iterate over (starting with the most downstream target)}

\item{base.fwd.table}{a \code{kalisForwardTable} either at the most upstream target, or if the targets are evenly spaced, one interval upstream of the most upstream target.
NULL (the default) is interpretted as the prior \code{Pi}, see \code{\link{Parameters}}}

\item{disk.ckpts}{an integer specifying the number of checkpoints to store on disk}

\item{disk.dir}{a path to a directory where a temporary folder may be made to store checkpoints on disk}

\item{force.unif}{a logical, if TRUE iterate over targets as if they were uniformly spaced. WARNING: DO NOT use this in conjunction with the targets method, still experimental. With force.unif = TRUE, the resulting iterator appear to be targeting the first length(targets) variants with all methods, but in fact will be silently iterating over the original targets.}
}
\description{
Create a \code{kalisForwardIterator} for propagating a forward table iteratively over target loci using a table cache and optimal checkpointing.
}
\details{
See example.
}
\examples{
\dontrun{
data("SmallHaps")
CacheHaplotypes(SmallHaps)
pars <- Parameters()
fwd <- MakeForwardTable(pars)
bck <- MakeBackwardTable(pars)
Iter <- ForwardIterator(2)
for(t in targets(Iter)){
  Iter(fwd,pars,t)
  Backward(bck,pars,t)
  print(paste("Mean Distance at locus",t,"is",mean(DistMat(fwd,bck))))
}
}

}
\seealso{
\code{\link{MakeForwardTable}} to create a \code{kalisForwardTable}.
}
