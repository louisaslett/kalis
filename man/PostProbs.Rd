% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Probs.R
\name{PostProbs}
\alias{PostProbs}
\title{Posterior marginal probabilities}
\usage{
PostProbs(
  fwd,
  bck,
  unif.on.underflow = FALSE,
  M = NULL,
  beta.theta.opts = NULL,
  nthreads = min(parallel::detectCores(logical = FALSE), fwd$to_recipient -
    fwd$from_recipient + 1)
)
}
\arguments{
\item{fwd}{a forward table as returned by \code{\link{MakeForwardTable}}}

\item{bck}{a backward table as returned by \code{\link{MakeBackwardTable}}}

\item{unif.on.underflow}{a logical; if TRUE, then if all probabilities in a column underflow, then they will be set to \eqn{1/(N-1)} instead of 0}

\item{M}{an pre-existing matrix into which to write the probabilities, can yield substantial speed up but requires special attention (see Details)}

\item{beta.theta.opts}{a list; see Details.}

\item{nthreads}{the number of CPU cores to use. By default no parallelism is used.}

\item{from_recipient}{offset for distributed problems, see kalis distributed.}
}
\value{
Matrix of posterior marginal probabilities.
The \eqn{(j,i)}-th element of of the returned matrix is the probability
that \eqn{j} is copied by \eqn{i} at the current locus, \eqn{l}, of the two
tables, given the haplotypes observed (over the whole sequence).

If calculating many posterior probability matrices in succession, providing a pre-existing matrix \code{M} that can be updated in-place can drastically increase speed by eliminating the time needed for memory allocation.
Be warned, since the matrix is updated in-place, if any other variables point to the same memory address, they will also be simultaneously overwritten.  For example, writing

\if{html}{\out{<div class="sourceCode">}}\preformatted{M <- matrix(0,nrow(fwd$alpha),ncol(fwd$alpha))
P <- M
PostProbs(fwd,bck,M=M)
}\if{html}{\out{</div>}}

will update M and P simultaneously.
}
\description{
Calculated the posterior marginal probabilities at a given locus using
forward and backward tables propagated to that position.
}
\details{
The forward and backward tables must be at the same locus in order for them
to be combined to yield the posterior marginal probabilities at locus
\eqn{l}.
The \eqn{(j,i)}-th element of of the returned matrix is the probability that
\eqn{j} is copied by \eqn{i} at the current locus, \eqn{l}, of the two
tables, given the haplotypes observed (over the whole sequence).

Note that each column represents an independent HMM.

By convention, every diagonal element is zero.
}
\examples{
\dontrun{
# To get the posterior probabilities at, say, locus 10 ...
Forward(fwd, pars, 10, nthreads = 8)
Backward(bck, pars, 10, nthreads = 8)
p <- PostProbs(fwd, bck)
}

}
\seealso{
\code{\link{DistMat}} to generate calculate \eqn{d_{ji}}{d_(j,i)} distances
directly;
\code{\link{Forward}} to propogate a Forward table to a new locus;
\code{\link{Backward}} to propogate a Backward table to a new locus.
}
