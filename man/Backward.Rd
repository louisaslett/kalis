% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FB.R
\name{Backward}
\alias{Backward}
\title{Propagate a backward table}
\usage{
Backward(bck, pars, t = bck$l - 1, nthreads = 1, beta.theta = FALSE)
}
\arguments{
\item{bck}{a \code{kalisBackwardTable} object, as returned by
\code{\link{MakeBackwardTable}}.}

\item{pars}{a \code{kalisParameters} object, as returned by
\code{Parameters}.}

\item{t}{a locus position to move the backward table to.
Must be less than or equal to current locus position of \code{bck}.
By default, it simply advances to the locus immediately before.}

\item{nthreads}{the number of CPU cores to use.
By default no parallelism is used.}

\item{beta.theta}{logical indicating whether the table should be returned in
beta-theta space or in the standard space upon reaching the target locus
\code{t}.}
}
\value{
There is nothing returned.
For performance reasons, \code{bck} is updated in-place.
}
\description{
Propagates a \code{kalisBackwardTable} to an upstream locus position.
The table is updated in-place.
}
\details{
\code{Backward} implements the backward algorithm to advance the Li and
Stephens rescaled hidden Markov model backward probabilities to a new target
locus.
}
\examples{
\dontrun{
# Assuming that pars already contains a Parameters object, we can create a
# new backward table and propagate to locus 100 using 8-core parallelsim:
bck <- MakeBackwardTable()
Backward(bck, pars, 100, nthreads = 8)
}

}
\seealso{
\code{\link{MakeBackwardTable}} to generate a backward table;
\code{\link{Forward}} for the analagous forward propagation function;
\code{\link{CopyTable}} to create a copy of table.
}
