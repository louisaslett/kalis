% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CacheHaplotypes.R
\name{QueryCache}
\alias{QueryCache}
\title{Retrieve haplotypes from memory cache}
\usage{
QueryCache(loci.idx = NULL, hap.idx = NULL)
}
\arguments{
\item{loci.idx}{which loci to retrieve from the cache, specified as a
(vector) index.  This enables specifying loci by offset in the order
they were loaded into the cache (from 1 to the number of loci).
Cannot be specified at the same time as \code{loci.ids}}

\item{hap.idx}{which haplotypes to retrieve from the cache, specified as a
(vector) index.  This enables specifying haplotypes by offset in the order
they were loaded into the cache (from 1 to the number of haplotypes).}
}
\value{
A matrix of 0/1 integers with \code{length(loci.idx)} rows and
\code{length(hap.idx)} columns, such that haplotypes appear in columns.
}
\description{
Retrieve haplotypes from the memory cache, converting the raw binary into
a simple integer 0/1 for inspection and use in R.
}
\details{
To achieve higher performance, kalis internally represents haplotypes
in an efficient raw binary format in memory which cannot be directly viewed
or manipulated in R.  This function enables you to copy whole or partial
haplotypes out of this low-level format and into a standard R
matrix of 0's and 1's.
}
\examples{
# Examples
\dontrun{
# For the purposes of an example, fill the cache with random haplotypes ...
n.haps <- 100
n.loci <- 20000
haps <- matrix(sample(0:1, n.haps*n.loci, replace = TRUE),
               nrow = n.loci,
               ncol = n.haps)
CacheHaplotypes(haps)

# ... and confirm we can read a chosen portion back.  Try to read back
# the 10th and 11th haplotypes from loci 50 to 250 inclusive
res <- QueryCache(10:11, 50, 201)
all(res == haps[50:250, 10:11])
}

}
\seealso{
\code{\link{CacheHaplotypes}} to fill the memory cache with
haplotypes.
}
