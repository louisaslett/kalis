% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CacheHaplotypes.R
\name{QueryCache}
\alias{QueryCache}
\title{Retrieve haplotypes from memory cache}
\usage{
QueryCache(ids = NA, start = 1, length = NA)
}
\arguments{
\item{ids}{which haplotypes to retrieve from the cache.  If supplied as an
integer vector, these are taken as numeric offsets.  If supplied as a
character vector then these correspond to haplotype IDs specified when the
haplotypes were read in.}

\item{start}{the first locus position to retrieve for the specified
haplotypes.
Defaults to the beginning of the haplotype.}

\item{length}{the number of consecutive loci to return from the start
position.
Defaults to length of entire haplotype from \code{start} argument to end.}
}
\value{
A matrix of 0/1 integers with \code{length} rows and
\code{length(ids)} columns, such that haplotypes appear in columns.
}
\description{
Retrieve haplotypes from the memory cache, converting the raw binary into
a simple integer 0/1 for inspection and use in R.
}
\details{
To achieve higher performance, kalis internally represents haplotypes
in an efficient raw binary format in memory which cannot be directly viewed
or manipulated in R.  This function enables you to copy whole or partial
haplotypes out of this low-level format and into a standard R
matrix of 0's and 1's.
}
\examples{
# Examples
\dontrun{
# For the purposes of an example, fill the cache with random haplotypes ...
n.haps <- 100
n.loci <- 20000
haps <- matrix(sample(0:1, n.haps*n.loci, replace = TRUE),
               nrow = n.loci,
               ncol = n.haps)
CacheHaplotypes(haps)

# ... and confirm we can read a chosen portion back.  Try to read back
# the 10th and 11th haplotypes from loci 50 to 250 inclusive
res <- QueryCache(10:11, 50, 201)
all(res == haps[50:250, 10:11])
}

}
\seealso{
\code{\link{CacheHaplotypes}} to fill the memory cache with
haplotypes.
}
