% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FB.R
\name{Forward}
\alias{Forward}
\title{Propagate a forward table}
\usage{
Forward(
  fwd,
  pars,
  t = fwd$l + 1,
  nthreads = min(parallel::detectCores(logical = FALSE), fwd$to_recipient -
    fwd$from_recipient + 1)
)
}
\arguments{
\item{fwd}{a \code{kalisForwardTable} object, as returned by
\code{\link{MakeForwardTable}}.}

\item{pars}{a \code{kalisParameters} object, as returned by
\code{\link{Parameters}}.}

\item{t}{a variant to move the forward table to.
Must be greater than or equal to current variant of \code{fwd}.
By default, it simply advances to the next variant downstream.}

\item{nthreads}{the number of CPU cores to use.
By default uses the \code{parallel} package to detect the number of physical cores.}
}
\value{
There is nothing returned.
For performance reasons, \code{fwd} is updated in-place.
}
\description{
Propagates a \code{kalisForwardTable} to a downstream variant.
The table is updated in-place.
}
\details{
\code{Forward} implements the forward algorithm to advance the Li and
Stephens rescaled hidden Markov model forward probabilities to a new target
variant.  Naturally, this can only propagate a table to variants downstream
of its current position.

For mathematical details please see Section 2 of the kalis paper (TODO: ref).
Note that the precise formulation of the forward equation is determined by
whether the flag \code{use.spiedel} is set in the parameters provided in
\code{pars}.
}
\examples{
\dontrun{
# Load the toy haplotype example and set toy parameters
CacheHaplotypes(SmallHaplotypes)
pars <- Parameters(rho = CalcRho(cM = SmallMap))

# Create a forward table for the hidden Markov model incorporating all
# recipient and donor haplotypes
fwd <- MakeForwardTable(pars)

# Create a forward table for the hidden Markov model incorporating only
# recipient haplotypes 100 to 200 (inclusive) and all donor haplotypes.
fwd <- MakeForwardTable(pars, 100, 200)

# This table is uninitialised, but ready to pass to the Forward function
# which will trigger initialisation and propagation.
# For example, initialise and propagate forward to the 10th variant:
Forward(fwd, pars, 10, nthreads = 8)
print(fwd)
}

}
\seealso{
\code{\link{MakeForwardTable}} to generate a forward table;
\code{\link{Backward}} for the analogous backward propagation function;
\code{\link{CopyTable}} to create a copy of table.
}
