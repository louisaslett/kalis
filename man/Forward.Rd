% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FB.R
\name{Forward}
\alias{Forward}
\title{Propagate a forward table}
\usage{
Forward(
  fwd,
  pars,
  t = fwd$l + 1,
  nthreads = min(parallel::detectCores(logical = FALSE), fwd$to_recipient -
    fwd$from_recipient + 1)
)
}
\arguments{
\item{fwd}{a \code{kalisForwardTable} object, as returned by
\code{\link[=MakeForwardTable]{MakeForwardTable()}}.}

\item{pars}{a \code{kalisParameters} object, as returned by
\code{\link[=Parameters]{Parameters()}}.}

\item{t}{a variant to move the forward table to.
Must be greater than or equal to current variant of \code{fwd}.
By default, it advances to the next variant downstream (or if an uninitialised table, to the first variant).}

\item{nthreads}{if a scalar, the number of CPU cores to use.
If a vector, launch as many threads as the length of the vector and attempt to pin the threads to those CPU cores (requires system to support thread affinity).
By default uses the \code{parallel} package to detect the number of physical cores.}
}
\value{
There is nothing returned.

\strong{NOTE:} for performance reasons, \code{fwd} is updated in-place.
}
\description{
Propagates a \code{kalisForwardTable} to a downstream variant.
The table is updated in-place.
}
\details{
\code{Forward} implements the forward algorithm to advance the Li and Stephens rescaled hidden Markov model forward probabilities to a new target variant.
Naturally, this can only propagate a table to variants downstream of its current position.

For mathematical details please see Section 2 of the kalis paper (TODO: ref).
Note that the precise formulation of the forward equation is determined by whether the flag \code{use.spiedel} is set in the parameters provided in \code{pars}.
}
\examples{
# Load the toy haplotype example and set toy parameters
data("SmallHaps")
data("SmallMap")

CacheHaplotypes(SmallHaps)

rho <- CalcRho(diff(SmallMap))
pars <- Parameters(rho)

# Create the forward table we want to propagate
fwd <- MakeForwardTable(pars)

# Calling Forward on this uninitialised table moves it to the first variant
Forward(fwd, pars)
fwd

# And again moves it to the next variant (etcetera)
Forward(fwd, pars)
fwd

# Or zoom to a particular variant
Forward(fwd, pars, 50)
fwd

}
\seealso{
\code{\link[=MakeForwardTable]{MakeForwardTable()}} to generate a forward table;
\code{\link[=Backward]{Backward()}} for the analogous backward propagation function;
\code{\link[=CopyTable]{CopyTable()}} to create a copy of table.
}
