% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TableMaker.R
\name{MakeForwardTable}
\alias{MakeForwardTable}
\alias{print.kalisForwardTable}
\title{Create a \code{kalisForwardTable}}
\usage{
MakeForwardTable(pars, from_recipient = 1, to_recipient = Inf)
}
\arguments{
\item{pars}{a \code{kalisParameters} environment specifying the genetics
parameters to be associated with this forward table.  These parameters can
be set up by using the \code{\link{Parameters}} function.}

\item{from_recipient}{first recipient haplotype if creating a partial forward
table.  By default includes from the first recipient haplotype.}

\item{to_recipient}{last recipient haplotype if creating a partial forward
table.  By default includes to the last recipient haplotype.}
}
\value{
a specialized list of class \code{kalisForwardTable}.  For a given \code{kalisForwardTable}, \code{fwd},
\code{fwd$l} denotes the current locus position of \code{fwd}.  \code{fwd$alpha} is a matrix of rescaled forward probabilities under the Li \& Stephens HMM.
Each column of \code{fwd$alpha} corresponds to an independent HMM such that \eqn{\alpha^l_{ji}}
is proportional to the probability that haplotype \eqn{j} is copied by haplotype \eqn{i} at locus \eqn{l} and
observing haplotype \eqn{i} from locus 1 up through locus \eqn{l}.  \code{fwd$alpha.f} and \code{fwd$alpha.f2}
are both vectors containing scaling constants needed to continue propagating the HMM (please see kalis paper for details).

\code{kalisForwardTable} also carries with it a checksum key for the parameters \code{pars} it was provided.
If a user attempts to interact a \code{kalisForwardTable} with a \code{kalisBackwardTable} with mismatched
parameters, an error will be thrown.
}
\description{
Allocates the memory for and initializes up a forward table.
}
\details{
\code{MakeForwardTable} returns a \code{kalisForwardTable} object appropriate for
a given set of haplotypes (that must have already been cached by \code{CacheAllHaplotypes}) and
a given set of HMM parameters specified by \code{pars}.  The returned \code{kalisForwardTable} is
initialized at locus 0 and is ready to be propagated to a given target locus with the function \code{\link{Forward}}.

Since there is an independent hidden Markov model run for each recipient
haplotype, it is possible to create a partial forward table object which
corresponds to a subset of recipients using the \code{from_recipient} and
\code{to_recipient} arguments.
}
\examples{
# Examples
\dontrun{
# Create a forward table for the hidden Markov model incorporating all
# recipient and donor haplotypes
fwd <- MakeForwardTable()

# Create a forward table for the hidden Markov model incorporating only
# recipient haplotypes 100 to 200 (inclusive) and all donor haplotypes.
fwd <- MakeForwardTable(100, 200)

# This table is uninitialised, but ready to pass to the Forward function
# which will trigger initialisation and propagation from the first locus.
# For example, initialise and propagate forward to locus 10:
Forward(fwd, 10, morgan.dist, Ne, gamma, mu, nthreads = 8)
}

}
\seealso{
<<<<<<< HEAD
\code{\link{Forward}} to propagate the newly created table forward
through the genome.
=======
\code{\link{Forward}} to propagate the newly created \code{kalisForwardTable}.
>>>>>>> d2d34af838555a42ea3adce61dc7f3744e1cc85f
}
