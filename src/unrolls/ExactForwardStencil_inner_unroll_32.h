/* File generated by R/unroll-forward-inner-loop.R */

double *alphaNow0    = alphaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (0*KALIS_DOUBLEVEC_SIZE);
double *alphaNow1    = alphaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (1*KALIS_DOUBLEVEC_SIZE);
double *alphaNow2    = alphaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (2*KALIS_DOUBLEVEC_SIZE);
double *alphaNow3    = alphaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (3*KALIS_DOUBLEVEC_SIZE);
double *alphaNow4    = alphaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (4*KALIS_DOUBLEVEC_SIZE);
double *alphaNow5    = alphaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (5*KALIS_DOUBLEVEC_SIZE);
double *alphaNow6    = alphaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (6*KALIS_DOUBLEVEC_SIZE);
double *alphaNow7    = alphaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (7*KALIS_DOUBLEVEC_SIZE);
double *alphaNow8    = alphaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (8*KALIS_DOUBLEVEC_SIZE);
double *alphaNow9    = alphaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (9*KALIS_DOUBLEVEC_SIZE);
double *alphaNow10    = alphaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (10*KALIS_DOUBLEVEC_SIZE);
double *alphaNow11    = alphaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (11*KALIS_DOUBLEVEC_SIZE);
double *alphaNow12    = alphaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (12*KALIS_DOUBLEVEC_SIZE);
double *alphaNow13    = alphaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (13*KALIS_DOUBLEVEC_SIZE);
double *alphaNow14    = alphaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (14*KALIS_DOUBLEVEC_SIZE);
double *alphaNow15    = alphaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (15*KALIS_DOUBLEVEC_SIZE);
double *alphaNow16    = alphaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (16*KALIS_DOUBLEVEC_SIZE);
double *alphaNow17    = alphaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (17*KALIS_DOUBLEVEC_SIZE);
double *alphaNow18    = alphaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (18*KALIS_DOUBLEVEC_SIZE);
double *alphaNow19    = alphaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (19*KALIS_DOUBLEVEC_SIZE);
double *alphaNow20    = alphaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (20*KALIS_DOUBLEVEC_SIZE);
double *alphaNow21    = alphaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (21*KALIS_DOUBLEVEC_SIZE);
double *alphaNow22    = alphaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (22*KALIS_DOUBLEVEC_SIZE);
double *alphaNow23    = alphaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (23*KALIS_DOUBLEVEC_SIZE);
double *alphaNow24    = alphaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (24*KALIS_DOUBLEVEC_SIZE);
double *alphaNow25    = alphaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (25*KALIS_DOUBLEVEC_SIZE);
double *alphaNow26    = alphaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (26*KALIS_DOUBLEVEC_SIZE);
double *alphaNow27    = alphaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (27*KALIS_DOUBLEVEC_SIZE);
double *alphaNow28    = alphaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (28*KALIS_DOUBLEVEC_SIZE);
double *alphaNow29    = alphaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (29*KALIS_DOUBLEVEC_SIZE);
double *alphaNow30    = alphaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (30*KALIS_DOUBLEVEC_SIZE);
double *alphaNow31    = alphaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (31*KALIS_DOUBLEVEC_SIZE);

KALIS_DOUBLE _alpha0 = KALIS_LOADU_DOUBLE(alphaNow0);
KALIS_DOUBLE _alpha1 = KALIS_LOADU_DOUBLE(alphaNow1);
KALIS_DOUBLE _alpha2 = KALIS_LOADU_DOUBLE(alphaNow2);
KALIS_DOUBLE _alpha3 = KALIS_LOADU_DOUBLE(alphaNow3);
KALIS_DOUBLE _alpha4 = KALIS_LOADU_DOUBLE(alphaNow4);
KALIS_DOUBLE _alpha5 = KALIS_LOADU_DOUBLE(alphaNow5);
KALIS_DOUBLE _alpha6 = KALIS_LOADU_DOUBLE(alphaNow6);
KALIS_DOUBLE _alpha7 = KALIS_LOADU_DOUBLE(alphaNow7);
KALIS_DOUBLE _alpha8 = KALIS_LOADU_DOUBLE(alphaNow8);
KALIS_DOUBLE _alpha9 = KALIS_LOADU_DOUBLE(alphaNow9);
KALIS_DOUBLE _alpha10 = KALIS_LOADU_DOUBLE(alphaNow10);
KALIS_DOUBLE _alpha11 = KALIS_LOADU_DOUBLE(alphaNow11);
KALIS_DOUBLE _alpha12 = KALIS_LOADU_DOUBLE(alphaNow12);
KALIS_DOUBLE _alpha13 = KALIS_LOADU_DOUBLE(alphaNow13);
KALIS_DOUBLE _alpha14 = KALIS_LOADU_DOUBLE(alphaNow14);
KALIS_DOUBLE _alpha15 = KALIS_LOADU_DOUBLE(alphaNow15);
KALIS_DOUBLE _alpha16 = KALIS_LOADU_DOUBLE(alphaNow16);
KALIS_DOUBLE _alpha17 = KALIS_LOADU_DOUBLE(alphaNow17);
KALIS_DOUBLE _alpha18 = KALIS_LOADU_DOUBLE(alphaNow18);
KALIS_DOUBLE _alpha19 = KALIS_LOADU_DOUBLE(alphaNow19);
KALIS_DOUBLE _alpha20 = KALIS_LOADU_DOUBLE(alphaNow20);
KALIS_DOUBLE _alpha21 = KALIS_LOADU_DOUBLE(alphaNow21);
KALIS_DOUBLE _alpha22 = KALIS_LOADU_DOUBLE(alphaNow22);
KALIS_DOUBLE _alpha23 = KALIS_LOADU_DOUBLE(alphaNow23);
KALIS_DOUBLE _alpha24 = KALIS_LOADU_DOUBLE(alphaNow24);
KALIS_DOUBLE _alpha25 = KALIS_LOADU_DOUBLE(alphaNow25);
KALIS_DOUBLE _alpha26 = KALIS_LOADU_DOUBLE(alphaNow26);
KALIS_DOUBLE _alpha27 = KALIS_LOADU_DOUBLE(alphaNow27);
KALIS_DOUBLE _alpha28 = KALIS_LOADU_DOUBLE(alphaNow28);
KALIS_DOUBLE _alpha29 = KALIS_LOADU_DOUBLE(alphaNow29);
KALIS_DOUBLE _alpha30 = KALIS_LOADU_DOUBLE(alphaNow30);
KALIS_DOUBLE _alpha31 = KALIS_LOADU_DOUBLE(alphaNow31);

KALIS_DOUBLE _pi0    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (0*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi1    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (1*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi2    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (2*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi3    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (3*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi4    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (4*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi5    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (5*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi6    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (6*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi7    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (7*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi8    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (8*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi9    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (9*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi10    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (10*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi11    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (11*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi12    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (12*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi13    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (13*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi14    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (14*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi15    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (15*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi16    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (16*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi17    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (17*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi18    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (18*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi19    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (19*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi20    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (20*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi21    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (21*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi22    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (22*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi23    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (23*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi24    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (24*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi25    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (25*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi26    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (26*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi27    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (27*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi28    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (28*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi29    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (29*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi30    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (30*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi31    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (31*KALIS_DOUBLEVEC_SIZE));

_pi0                 = KALIS_MUL_DOUBLE(_pi0, _rho);
_pi1                 = KALIS_MUL_DOUBLE(_pi1, _rho);
_pi2                 = KALIS_MUL_DOUBLE(_pi2, _rho);
_pi3                 = KALIS_MUL_DOUBLE(_pi3, _rho);
_pi4                 = KALIS_MUL_DOUBLE(_pi4, _rho);
_pi5                 = KALIS_MUL_DOUBLE(_pi5, _rho);
_pi6                 = KALIS_MUL_DOUBLE(_pi6, _rho);
_pi7                 = KALIS_MUL_DOUBLE(_pi7, _rho);
_pi8                 = KALIS_MUL_DOUBLE(_pi8, _rho);
_pi9                 = KALIS_MUL_DOUBLE(_pi9, _rho);
_pi10                 = KALIS_MUL_DOUBLE(_pi10, _rho);
_pi11                 = KALIS_MUL_DOUBLE(_pi11, _rho);
_pi12                 = KALIS_MUL_DOUBLE(_pi12, _rho);
_pi13                 = KALIS_MUL_DOUBLE(_pi13, _rho);
_pi14                 = KALIS_MUL_DOUBLE(_pi14, _rho);
_pi15                 = KALIS_MUL_DOUBLE(_pi15, _rho);
_pi16                 = KALIS_MUL_DOUBLE(_pi16, _rho);
_pi17                 = KALIS_MUL_DOUBLE(_pi17, _rho);
_pi18                 = KALIS_MUL_DOUBLE(_pi18, _rho);
_pi19                 = KALIS_MUL_DOUBLE(_pi19, _rho);
_pi20                 = KALIS_MUL_DOUBLE(_pi20, _rho);
_pi21                 = KALIS_MUL_DOUBLE(_pi21, _rho);
_pi22                 = KALIS_MUL_DOUBLE(_pi22, _rho);
_pi23                 = KALIS_MUL_DOUBLE(_pi23, _rho);
_pi24                 = KALIS_MUL_DOUBLE(_pi24, _rho);
_pi25                 = KALIS_MUL_DOUBLE(_pi25, _rho);
_pi26                 = KALIS_MUL_DOUBLE(_pi26, _rho);
_pi27                 = KALIS_MUL_DOUBLE(_pi27, _rho);
_pi28                 = KALIS_MUL_DOUBLE(_pi28, _rho);
_pi29                 = KALIS_MUL_DOUBLE(_pi29, _rho);
_pi30                 = KALIS_MUL_DOUBLE(_pi30, _rho);
_pi31                 = KALIS_MUL_DOUBLE(_pi31, _rho);

_alpha0              = KALIS_FMA_DOUBLE(_alpha0, _omRhoDivF, _pi0); // (Pi*rho + [(1-rho)/f] * alpha)
_alpha1              = KALIS_FMA_DOUBLE(_alpha1, _omRhoDivF, _pi1); // (Pi*rho + [(1-rho)/f] * alpha)
_alpha2              = KALIS_FMA_DOUBLE(_alpha2, _omRhoDivF, _pi2); // (Pi*rho + [(1-rho)/f] * alpha)
_alpha3              = KALIS_FMA_DOUBLE(_alpha3, _omRhoDivF, _pi3); // (Pi*rho + [(1-rho)/f] * alpha)
_alpha4              = KALIS_FMA_DOUBLE(_alpha4, _omRhoDivF, _pi4); // (Pi*rho + [(1-rho)/f] * alpha)
_alpha5              = KALIS_FMA_DOUBLE(_alpha5, _omRhoDivF, _pi5); // (Pi*rho + [(1-rho)/f] * alpha)
_alpha6              = KALIS_FMA_DOUBLE(_alpha6, _omRhoDivF, _pi6); // (Pi*rho + [(1-rho)/f] * alpha)
_alpha7              = KALIS_FMA_DOUBLE(_alpha7, _omRhoDivF, _pi7); // (Pi*rho + [(1-rho)/f] * alpha)
_alpha8              = KALIS_FMA_DOUBLE(_alpha8, _omRhoDivF, _pi8); // (Pi*rho + [(1-rho)/f] * alpha)
_alpha9              = KALIS_FMA_DOUBLE(_alpha9, _omRhoDivF, _pi9); // (Pi*rho + [(1-rho)/f] * alpha)
_alpha10              = KALIS_FMA_DOUBLE(_alpha10, _omRhoDivF, _pi10); // (Pi*rho + [(1-rho)/f] * alpha)
_alpha11              = KALIS_FMA_DOUBLE(_alpha11, _omRhoDivF, _pi11); // (Pi*rho + [(1-rho)/f] * alpha)
_alpha12              = KALIS_FMA_DOUBLE(_alpha12, _omRhoDivF, _pi12); // (Pi*rho + [(1-rho)/f] * alpha)
_alpha13              = KALIS_FMA_DOUBLE(_alpha13, _omRhoDivF, _pi13); // (Pi*rho + [(1-rho)/f] * alpha)
_alpha14              = KALIS_FMA_DOUBLE(_alpha14, _omRhoDivF, _pi14); // (Pi*rho + [(1-rho)/f] * alpha)
_alpha15              = KALIS_FMA_DOUBLE(_alpha15, _omRhoDivF, _pi15); // (Pi*rho + [(1-rho)/f] * alpha)
_alpha16              = KALIS_FMA_DOUBLE(_alpha16, _omRhoDivF, _pi16); // (Pi*rho + [(1-rho)/f] * alpha)
_alpha17              = KALIS_FMA_DOUBLE(_alpha17, _omRhoDivF, _pi17); // (Pi*rho + [(1-rho)/f] * alpha)
_alpha18              = KALIS_FMA_DOUBLE(_alpha18, _omRhoDivF, _pi18); // (Pi*rho + [(1-rho)/f] * alpha)
_alpha19              = KALIS_FMA_DOUBLE(_alpha19, _omRhoDivF, _pi19); // (Pi*rho + [(1-rho)/f] * alpha)
_alpha20              = KALIS_FMA_DOUBLE(_alpha20, _omRhoDivF, _pi20); // (Pi*rho + [(1-rho)/f] * alpha)
_alpha21              = KALIS_FMA_DOUBLE(_alpha21, _omRhoDivF, _pi21); // (Pi*rho + [(1-rho)/f] * alpha)
_alpha22              = KALIS_FMA_DOUBLE(_alpha22, _omRhoDivF, _pi22); // (Pi*rho + [(1-rho)/f] * alpha)
_alpha23              = KALIS_FMA_DOUBLE(_alpha23, _omRhoDivF, _pi23); // (Pi*rho + [(1-rho)/f] * alpha)
_alpha24              = KALIS_FMA_DOUBLE(_alpha24, _omRhoDivF, _pi24); // (Pi*rho + [(1-rho)/f] * alpha)
_alpha25              = KALIS_FMA_DOUBLE(_alpha25, _omRhoDivF, _pi25); // (Pi*rho + [(1-rho)/f] * alpha)
_alpha26              = KALIS_FMA_DOUBLE(_alpha26, _omRhoDivF, _pi26); // (Pi*rho + [(1-rho)/f] * alpha)
_alpha27              = KALIS_FMA_DOUBLE(_alpha27, _omRhoDivF, _pi27); // (Pi*rho + [(1-rho)/f] * alpha)
_alpha28              = KALIS_FMA_DOUBLE(_alpha28, _omRhoDivF, _pi28); // (Pi*rho + [(1-rho)/f] * alpha)
_alpha29              = KALIS_FMA_DOUBLE(_alpha29, _omRhoDivF, _pi29); // (Pi*rho + [(1-rho)/f] * alpha)
_alpha30              = KALIS_FMA_DOUBLE(_alpha30, _omRhoDivF, _pi30); // (Pi*rho + [(1-rho)/f] * alpha)
_alpha31              = KALIS_FMA_DOUBLE(_alpha31, _omRhoDivF, _pi31); // (Pi*rho + [(1-rho)/f] * alpha)

#if !defined(KALIS_1STEP)
KALIS_DOUBLE _theta0 = KALIS_SPREADBITSTO_DOUBLE((HA[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(0*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(0*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta1 = KALIS_SPREADBITSTO_DOUBLE((HA[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(1*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(1*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta2 = KALIS_SPREADBITSTO_DOUBLE((HA[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(2*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(2*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta3 = KALIS_SPREADBITSTO_DOUBLE((HA[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(3*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(3*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta4 = KALIS_SPREADBITSTO_DOUBLE((HA[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(4*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(4*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta5 = KALIS_SPREADBITSTO_DOUBLE((HA[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(5*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(5*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta6 = KALIS_SPREADBITSTO_DOUBLE((HA[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(6*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(6*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta7 = KALIS_SPREADBITSTO_DOUBLE((HA[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(7*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(7*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta8 = KALIS_SPREADBITSTO_DOUBLE((HA[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(8*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(8*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta9 = KALIS_SPREADBITSTO_DOUBLE((HA[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(9*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(9*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta10 = KALIS_SPREADBITSTO_DOUBLE((HA[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(10*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(10*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta11 = KALIS_SPREADBITSTO_DOUBLE((HA[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(11*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(11*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta12 = KALIS_SPREADBITSTO_DOUBLE((HA[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(12*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(12*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta13 = KALIS_SPREADBITSTO_DOUBLE((HA[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(13*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(13*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta14 = KALIS_SPREADBITSTO_DOUBLE((HA[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(14*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(14*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta15 = KALIS_SPREADBITSTO_DOUBLE((HA[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(15*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(15*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta16 = KALIS_SPREADBITSTO_DOUBLE((HA[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(16*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(16*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta17 = KALIS_SPREADBITSTO_DOUBLE((HA[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(17*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(17*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta18 = KALIS_SPREADBITSTO_DOUBLE((HA[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(18*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(18*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta19 = KALIS_SPREADBITSTO_DOUBLE((HA[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(19*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(19*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta20 = KALIS_SPREADBITSTO_DOUBLE((HA[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(20*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(20*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta21 = KALIS_SPREADBITSTO_DOUBLE((HA[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(21*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(21*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta22 = KALIS_SPREADBITSTO_DOUBLE((HA[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(22*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(22*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta23 = KALIS_SPREADBITSTO_DOUBLE((HA[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(23*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(23*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta24 = KALIS_SPREADBITSTO_DOUBLE((HA[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(24*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(24*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta25 = KALIS_SPREADBITSTO_DOUBLE((HA[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(25*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(25*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta26 = KALIS_SPREADBITSTO_DOUBLE((HA[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(26*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(26*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta27 = KALIS_SPREADBITSTO_DOUBLE((HA[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(27*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(27*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta28 = KALIS_SPREADBITSTO_DOUBLE((HA[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(28*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(28*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta29 = KALIS_SPREADBITSTO_DOUBLE((HA[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(29*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(29*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta30 = KALIS_SPREADBITSTO_DOUBLE((HA[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(30*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(30*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta31 = KALIS_SPREADBITSTO_DOUBLE((HA[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(31*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(31*KALIS_DOUBLEVEC_SIZE))%32));

_theta0              = KALIS_FMA_DOUBLE(_theta0, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta1              = KALIS_FMA_DOUBLE(_theta1, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta2              = KALIS_FMA_DOUBLE(_theta2, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta3              = KALIS_FMA_DOUBLE(_theta3, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta4              = KALIS_FMA_DOUBLE(_theta4, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta5              = KALIS_FMA_DOUBLE(_theta5, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta6              = KALIS_FMA_DOUBLE(_theta6, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta7              = KALIS_FMA_DOUBLE(_theta7, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta8              = KALIS_FMA_DOUBLE(_theta8, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta9              = KALIS_FMA_DOUBLE(_theta9, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta10              = KALIS_FMA_DOUBLE(_theta10, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta11              = KALIS_FMA_DOUBLE(_theta11, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta12              = KALIS_FMA_DOUBLE(_theta12, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta13              = KALIS_FMA_DOUBLE(_theta13, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta14              = KALIS_FMA_DOUBLE(_theta14, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta15              = KALIS_FMA_DOUBLE(_theta15, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta16              = KALIS_FMA_DOUBLE(_theta16, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta17              = KALIS_FMA_DOUBLE(_theta17, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta18              = KALIS_FMA_DOUBLE(_theta18, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta19              = KALIS_FMA_DOUBLE(_theta19, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta20              = KALIS_FMA_DOUBLE(_theta20, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta21              = KALIS_FMA_DOUBLE(_theta21, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta22              = KALIS_FMA_DOUBLE(_theta22, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta23              = KALIS_FMA_DOUBLE(_theta23, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta24              = KALIS_FMA_DOUBLE(_theta24, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta25              = KALIS_FMA_DOUBLE(_theta25, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta26              = KALIS_FMA_DOUBLE(_theta26, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta27              = KALIS_FMA_DOUBLE(_theta27, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta28              = KALIS_FMA_DOUBLE(_theta28, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta29              = KALIS_FMA_DOUBLE(_theta29, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta30              = KALIS_FMA_DOUBLE(_theta30, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta31              = KALIS_FMA_DOUBLE(_theta31, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
#else
KALIS_DOUBLE _theta0 = KALIS_SET_DOUBLE(1.0);
KALIS_DOUBLE _theta1 = KALIS_SET_DOUBLE(1.0);
KALIS_DOUBLE _theta2 = KALIS_SET_DOUBLE(1.0);
KALIS_DOUBLE _theta3 = KALIS_SET_DOUBLE(1.0);
KALIS_DOUBLE _theta4 = KALIS_SET_DOUBLE(1.0);
KALIS_DOUBLE _theta5 = KALIS_SET_DOUBLE(1.0);
KALIS_DOUBLE _theta6 = KALIS_SET_DOUBLE(1.0);
KALIS_DOUBLE _theta7 = KALIS_SET_DOUBLE(1.0);
KALIS_DOUBLE _theta8 = KALIS_SET_DOUBLE(1.0);
KALIS_DOUBLE _theta9 = KALIS_SET_DOUBLE(1.0);
KALIS_DOUBLE _theta10 = KALIS_SET_DOUBLE(1.0);
KALIS_DOUBLE _theta11 = KALIS_SET_DOUBLE(1.0);
KALIS_DOUBLE _theta12 = KALIS_SET_DOUBLE(1.0);
KALIS_DOUBLE _theta13 = KALIS_SET_DOUBLE(1.0);
KALIS_DOUBLE _theta14 = KALIS_SET_DOUBLE(1.0);
KALIS_DOUBLE _theta15 = KALIS_SET_DOUBLE(1.0);
KALIS_DOUBLE _theta16 = KALIS_SET_DOUBLE(1.0);
KALIS_DOUBLE _theta17 = KALIS_SET_DOUBLE(1.0);
KALIS_DOUBLE _theta18 = KALIS_SET_DOUBLE(1.0);
KALIS_DOUBLE _theta19 = KALIS_SET_DOUBLE(1.0);
KALIS_DOUBLE _theta20 = KALIS_SET_DOUBLE(1.0);
KALIS_DOUBLE _theta21 = KALIS_SET_DOUBLE(1.0);
KALIS_DOUBLE _theta22 = KALIS_SET_DOUBLE(1.0);
KALIS_DOUBLE _theta23 = KALIS_SET_DOUBLE(1.0);
KALIS_DOUBLE _theta24 = KALIS_SET_DOUBLE(1.0);
KALIS_DOUBLE _theta25 = KALIS_SET_DOUBLE(1.0);
KALIS_DOUBLE _theta26 = KALIS_SET_DOUBLE(1.0);
KALIS_DOUBLE _theta27 = KALIS_SET_DOUBLE(1.0);
KALIS_DOUBLE _theta28 = KALIS_SET_DOUBLE(1.0);
KALIS_DOUBLE _theta29 = KALIS_SET_DOUBLE(1.0);
KALIS_DOUBLE _theta30 = KALIS_SET_DOUBLE(1.0);
KALIS_DOUBLE _theta31 = KALIS_SET_DOUBLE(1.0);
#endif

_alpha0              = KALIS_MUL_DOUBLE(_theta0, _alpha0);
_alpha1              = KALIS_MUL_DOUBLE(_theta1, _alpha1);
_alpha2              = KALIS_MUL_DOUBLE(_theta2, _alpha2);
_alpha3              = KALIS_MUL_DOUBLE(_theta3, _alpha3);
_alpha4              = KALIS_MUL_DOUBLE(_theta4, _alpha4);
_alpha5              = KALIS_MUL_DOUBLE(_theta5, _alpha5);
_alpha6              = KALIS_MUL_DOUBLE(_theta6, _alpha6);
_alpha7              = KALIS_MUL_DOUBLE(_theta7, _alpha7);
_alpha8              = KALIS_MUL_DOUBLE(_theta8, _alpha8);
_alpha9              = KALIS_MUL_DOUBLE(_theta9, _alpha9);
_alpha10              = KALIS_MUL_DOUBLE(_theta10, _alpha10);
_alpha11              = KALIS_MUL_DOUBLE(_theta11, _alpha11);
_alpha12              = KALIS_MUL_DOUBLE(_theta12, _alpha12);
_alpha13              = KALIS_MUL_DOUBLE(_theta13, _alpha13);
_alpha14              = KALIS_MUL_DOUBLE(_theta14, _alpha14);
_alpha15              = KALIS_MUL_DOUBLE(_theta15, _alpha15);
_alpha16              = KALIS_MUL_DOUBLE(_theta16, _alpha16);
_alpha17              = KALIS_MUL_DOUBLE(_theta17, _alpha17);
_alpha18              = KALIS_MUL_DOUBLE(_theta18, _alpha18);
_alpha19              = KALIS_MUL_DOUBLE(_theta19, _alpha19);
_alpha20              = KALIS_MUL_DOUBLE(_theta20, _alpha20);
_alpha21              = KALIS_MUL_DOUBLE(_theta21, _alpha21);
_alpha22              = KALIS_MUL_DOUBLE(_theta22, _alpha22);
_alpha23              = KALIS_MUL_DOUBLE(_theta23, _alpha23);
_alpha24              = KALIS_MUL_DOUBLE(_theta24, _alpha24);
_alpha25              = KALIS_MUL_DOUBLE(_theta25, _alpha25);
_alpha26              = KALIS_MUL_DOUBLE(_theta26, _alpha26);
_alpha27              = KALIS_MUL_DOUBLE(_theta27, _alpha27);
_alpha28              = KALIS_MUL_DOUBLE(_theta28, _alpha28);
_alpha29              = KALIS_MUL_DOUBLE(_theta29, _alpha29);
_alpha30              = KALIS_MUL_DOUBLE(_theta30, _alpha30);
_alpha31              = KALIS_MUL_DOUBLE(_theta31, _alpha31);

_f                   = KALIS_ADD_DOUBLE(_f, _alpha0);
_f                   = KALIS_ADD_DOUBLE(_f, _alpha1);
_f                   = KALIS_ADD_DOUBLE(_f, _alpha2);
_f                   = KALIS_ADD_DOUBLE(_f, _alpha3);
_f                   = KALIS_ADD_DOUBLE(_f, _alpha4);
_f                   = KALIS_ADD_DOUBLE(_f, _alpha5);
_f                   = KALIS_ADD_DOUBLE(_f, _alpha6);
_f                   = KALIS_ADD_DOUBLE(_f, _alpha7);
_f                   = KALIS_ADD_DOUBLE(_f, _alpha8);
_f                   = KALIS_ADD_DOUBLE(_f, _alpha9);
_f                   = KALIS_ADD_DOUBLE(_f, _alpha10);
_f                   = KALIS_ADD_DOUBLE(_f, _alpha11);
_f                   = KALIS_ADD_DOUBLE(_f, _alpha12);
_f                   = KALIS_ADD_DOUBLE(_f, _alpha13);
_f                   = KALIS_ADD_DOUBLE(_f, _alpha14);
_f                   = KALIS_ADD_DOUBLE(_f, _alpha15);
_f                   = KALIS_ADD_DOUBLE(_f, _alpha16);
_f                   = KALIS_ADD_DOUBLE(_f, _alpha17);
_f                   = KALIS_ADD_DOUBLE(_f, _alpha18);
_f                   = KALIS_ADD_DOUBLE(_f, _alpha19);
_f                   = KALIS_ADD_DOUBLE(_f, _alpha20);
_f                   = KALIS_ADD_DOUBLE(_f, _alpha21);
_f                   = KALIS_ADD_DOUBLE(_f, _alpha22);
_f                   = KALIS_ADD_DOUBLE(_f, _alpha23);
_f                   = KALIS_ADD_DOUBLE(_f, _alpha24);
_f                   = KALIS_ADD_DOUBLE(_f, _alpha25);
_f                   = KALIS_ADD_DOUBLE(_f, _alpha26);
_f                   = KALIS_ADD_DOUBLE(_f, _alpha27);
_f                   = KALIS_ADD_DOUBLE(_f, _alpha28);
_f                   = KALIS_ADD_DOUBLE(_f, _alpha29);
_f                   = KALIS_ADD_DOUBLE(_f, _alpha30);
_f                   = KALIS_ADD_DOUBLE(_f, _alpha31);

KALIS_STOREU_DOUBLE(alphaNow0, _alpha0);
KALIS_STOREU_DOUBLE(alphaNow1, _alpha1);
KALIS_STOREU_DOUBLE(alphaNow2, _alpha2);
KALIS_STOREU_DOUBLE(alphaNow3, _alpha3);
KALIS_STOREU_DOUBLE(alphaNow4, _alpha4);
KALIS_STOREU_DOUBLE(alphaNow5, _alpha5);
KALIS_STOREU_DOUBLE(alphaNow6, _alpha6);
KALIS_STOREU_DOUBLE(alphaNow7, _alpha7);
KALIS_STOREU_DOUBLE(alphaNow8, _alpha8);
KALIS_STOREU_DOUBLE(alphaNow9, _alpha9);
KALIS_STOREU_DOUBLE(alphaNow10, _alpha10);
KALIS_STOREU_DOUBLE(alphaNow11, _alpha11);
KALIS_STOREU_DOUBLE(alphaNow12, _alpha12);
KALIS_STOREU_DOUBLE(alphaNow13, _alpha13);
KALIS_STOREU_DOUBLE(alphaNow14, _alpha14);
KALIS_STOREU_DOUBLE(alphaNow15, _alpha15);
KALIS_STOREU_DOUBLE(alphaNow16, _alpha16);
KALIS_STOREU_DOUBLE(alphaNow17, _alpha17);
KALIS_STOREU_DOUBLE(alphaNow18, _alpha18);
KALIS_STOREU_DOUBLE(alphaNow19, _alpha19);
KALIS_STOREU_DOUBLE(alphaNow20, _alpha20);
KALIS_STOREU_DOUBLE(alphaNow21, _alpha21);
KALIS_STOREU_DOUBLE(alphaNow22, _alpha22);
KALIS_STOREU_DOUBLE(alphaNow23, _alpha23);
KALIS_STOREU_DOUBLE(alphaNow24, _alpha24);
KALIS_STOREU_DOUBLE(alphaNow25, _alpha25);
KALIS_STOREU_DOUBLE(alphaNow26, _alpha26);
KALIS_STOREU_DOUBLE(alphaNow27, _alpha27);
KALIS_STOREU_DOUBLE(alphaNow28, _alpha28);
KALIS_STOREU_DOUBLE(alphaNow29, _alpha29);
KALIS_STOREU_DOUBLE(alphaNow30, _alpha30);
KALIS_STOREU_DOUBLE(alphaNow31, _alpha31);
