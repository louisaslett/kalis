/* File generated by R/unroll-backward-inner-loop.R */

double *betaNow0     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (0*KALIS_DOUBLEVEC_SIZE);
double *betaNow1     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (1*KALIS_DOUBLEVEC_SIZE);
double *betaNow2     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (2*KALIS_DOUBLEVEC_SIZE);
double *betaNow3     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (3*KALIS_DOUBLEVEC_SIZE);
double *betaNow4     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (4*KALIS_DOUBLEVEC_SIZE);
double *betaNow5     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (5*KALIS_DOUBLEVEC_SIZE);
double *betaNow6     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (6*KALIS_DOUBLEVEC_SIZE);
double *betaNow7     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (7*KALIS_DOUBLEVEC_SIZE);
double *betaNow8     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (8*KALIS_DOUBLEVEC_SIZE);
double *betaNow9     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (9*KALIS_DOUBLEVEC_SIZE);
double *betaNow10     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (10*KALIS_DOUBLEVEC_SIZE);
double *betaNow11     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (11*KALIS_DOUBLEVEC_SIZE);
double *betaNow12     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (12*KALIS_DOUBLEVEC_SIZE);
double *betaNow13     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (13*KALIS_DOUBLEVEC_SIZE);
double *betaNow14     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (14*KALIS_DOUBLEVEC_SIZE);
double *betaNow15     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (15*KALIS_DOUBLEVEC_SIZE);
double *betaNow16     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (16*KALIS_DOUBLEVEC_SIZE);
double *betaNow17     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (17*KALIS_DOUBLEVEC_SIZE);
double *betaNow18     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (18*KALIS_DOUBLEVEC_SIZE);
double *betaNow19     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (19*KALIS_DOUBLEVEC_SIZE);
double *betaNow20     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (20*KALIS_DOUBLEVEC_SIZE);
double *betaNow21     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (21*KALIS_DOUBLEVEC_SIZE);
double *betaNow22     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (22*KALIS_DOUBLEVEC_SIZE);
double *betaNow23     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (23*KALIS_DOUBLEVEC_SIZE);
double *betaNow24     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (24*KALIS_DOUBLEVEC_SIZE);
double *betaNow25     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (25*KALIS_DOUBLEVEC_SIZE);
double *betaNow26     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (26*KALIS_DOUBLEVEC_SIZE);
double *betaNow27     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (27*KALIS_DOUBLEVEC_SIZE);
double *betaNow28     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (28*KALIS_DOUBLEVEC_SIZE);
double *betaNow29     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (29*KALIS_DOUBLEVEC_SIZE);
double *betaNow30     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (30*KALIS_DOUBLEVEC_SIZE);
double *betaNow31     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (31*KALIS_DOUBLEVEC_SIZE);
double *betaNow32     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (32*KALIS_DOUBLEVEC_SIZE);
double *betaNow33     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (33*KALIS_DOUBLEVEC_SIZE);
double *betaNow34     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (34*KALIS_DOUBLEVEC_SIZE);
double *betaNow35     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (35*KALIS_DOUBLEVEC_SIZE);
double *betaNow36     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (36*KALIS_DOUBLEVEC_SIZE);
double *betaNow37     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (37*KALIS_DOUBLEVEC_SIZE);
double *betaNow38     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (38*KALIS_DOUBLEVEC_SIZE);
double *betaNow39     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (39*KALIS_DOUBLEVEC_SIZE);
double *betaNow40     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (40*KALIS_DOUBLEVEC_SIZE);
double *betaNow41     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (41*KALIS_DOUBLEVEC_SIZE);
double *betaNow42     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (42*KALIS_DOUBLEVEC_SIZE);
double *betaNow43     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (43*KALIS_DOUBLEVEC_SIZE);
double *betaNow44     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (44*KALIS_DOUBLEVEC_SIZE);
double *betaNow45     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (45*KALIS_DOUBLEVEC_SIZE);
double *betaNow46     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (46*KALIS_DOUBLEVEC_SIZE);
double *betaNow47     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (47*KALIS_DOUBLEVEC_SIZE);
double *betaNow48     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (48*KALIS_DOUBLEVEC_SIZE);
double *betaNow49     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (49*KALIS_DOUBLEVEC_SIZE);
double *betaNow50     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (50*KALIS_DOUBLEVEC_SIZE);
double *betaNow51     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (51*KALIS_DOUBLEVEC_SIZE);
double *betaNow52     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (52*KALIS_DOUBLEVEC_SIZE);
double *betaNow53     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (53*KALIS_DOUBLEVEC_SIZE);
double *betaNow54     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (54*KALIS_DOUBLEVEC_SIZE);
double *betaNow55     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (55*KALIS_DOUBLEVEC_SIZE);
double *betaNow56     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (56*KALIS_DOUBLEVEC_SIZE);
double *betaNow57     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (57*KALIS_DOUBLEVEC_SIZE);
double *betaNow58     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (58*KALIS_DOUBLEVEC_SIZE);
double *betaNow59     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (59*KALIS_DOUBLEVEC_SIZE);
double *betaNow60     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (60*KALIS_DOUBLEVEC_SIZE);
double *betaNow61     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (61*KALIS_DOUBLEVEC_SIZE);
double *betaNow62     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (62*KALIS_DOUBLEVEC_SIZE);
double *betaNow63     = betaRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (63*KALIS_DOUBLEVEC_SIZE);

KALIS_DOUBLE _beta0  = KALIS_LOADU_DOUBLE(betaNow0);
KALIS_DOUBLE _beta1  = KALIS_LOADU_DOUBLE(betaNow1);
KALIS_DOUBLE _beta2  = KALIS_LOADU_DOUBLE(betaNow2);
KALIS_DOUBLE _beta3  = KALIS_LOADU_DOUBLE(betaNow3);
KALIS_DOUBLE _beta4  = KALIS_LOADU_DOUBLE(betaNow4);
KALIS_DOUBLE _beta5  = KALIS_LOADU_DOUBLE(betaNow5);
KALIS_DOUBLE _beta6  = KALIS_LOADU_DOUBLE(betaNow6);
KALIS_DOUBLE _beta7  = KALIS_LOADU_DOUBLE(betaNow7);
KALIS_DOUBLE _beta8  = KALIS_LOADU_DOUBLE(betaNow8);
KALIS_DOUBLE _beta9  = KALIS_LOADU_DOUBLE(betaNow9);
KALIS_DOUBLE _beta10  = KALIS_LOADU_DOUBLE(betaNow10);
KALIS_DOUBLE _beta11  = KALIS_LOADU_DOUBLE(betaNow11);
KALIS_DOUBLE _beta12  = KALIS_LOADU_DOUBLE(betaNow12);
KALIS_DOUBLE _beta13  = KALIS_LOADU_DOUBLE(betaNow13);
KALIS_DOUBLE _beta14  = KALIS_LOADU_DOUBLE(betaNow14);
KALIS_DOUBLE _beta15  = KALIS_LOADU_DOUBLE(betaNow15);
KALIS_DOUBLE _beta16  = KALIS_LOADU_DOUBLE(betaNow16);
KALIS_DOUBLE _beta17  = KALIS_LOADU_DOUBLE(betaNow17);
KALIS_DOUBLE _beta18  = KALIS_LOADU_DOUBLE(betaNow18);
KALIS_DOUBLE _beta19  = KALIS_LOADU_DOUBLE(betaNow19);
KALIS_DOUBLE _beta20  = KALIS_LOADU_DOUBLE(betaNow20);
KALIS_DOUBLE _beta21  = KALIS_LOADU_DOUBLE(betaNow21);
KALIS_DOUBLE _beta22  = KALIS_LOADU_DOUBLE(betaNow22);
KALIS_DOUBLE _beta23  = KALIS_LOADU_DOUBLE(betaNow23);
KALIS_DOUBLE _beta24  = KALIS_LOADU_DOUBLE(betaNow24);
KALIS_DOUBLE _beta25  = KALIS_LOADU_DOUBLE(betaNow25);
KALIS_DOUBLE _beta26  = KALIS_LOADU_DOUBLE(betaNow26);
KALIS_DOUBLE _beta27  = KALIS_LOADU_DOUBLE(betaNow27);
KALIS_DOUBLE _beta28  = KALIS_LOADU_DOUBLE(betaNow28);
KALIS_DOUBLE _beta29  = KALIS_LOADU_DOUBLE(betaNow29);
KALIS_DOUBLE _beta30  = KALIS_LOADU_DOUBLE(betaNow30);
KALIS_DOUBLE _beta31  = KALIS_LOADU_DOUBLE(betaNow31);
KALIS_DOUBLE _beta32  = KALIS_LOADU_DOUBLE(betaNow32);
KALIS_DOUBLE _beta33  = KALIS_LOADU_DOUBLE(betaNow33);
KALIS_DOUBLE _beta34  = KALIS_LOADU_DOUBLE(betaNow34);
KALIS_DOUBLE _beta35  = KALIS_LOADU_DOUBLE(betaNow35);
KALIS_DOUBLE _beta36  = KALIS_LOADU_DOUBLE(betaNow36);
KALIS_DOUBLE _beta37  = KALIS_LOADU_DOUBLE(betaNow37);
KALIS_DOUBLE _beta38  = KALIS_LOADU_DOUBLE(betaNow38);
KALIS_DOUBLE _beta39  = KALIS_LOADU_DOUBLE(betaNow39);
KALIS_DOUBLE _beta40  = KALIS_LOADU_DOUBLE(betaNow40);
KALIS_DOUBLE _beta41  = KALIS_LOADU_DOUBLE(betaNow41);
KALIS_DOUBLE _beta42  = KALIS_LOADU_DOUBLE(betaNow42);
KALIS_DOUBLE _beta43  = KALIS_LOADU_DOUBLE(betaNow43);
KALIS_DOUBLE _beta44  = KALIS_LOADU_DOUBLE(betaNow44);
KALIS_DOUBLE _beta45  = KALIS_LOADU_DOUBLE(betaNow45);
KALIS_DOUBLE _beta46  = KALIS_LOADU_DOUBLE(betaNow46);
KALIS_DOUBLE _beta47  = KALIS_LOADU_DOUBLE(betaNow47);
KALIS_DOUBLE _beta48  = KALIS_LOADU_DOUBLE(betaNow48);
KALIS_DOUBLE _beta49  = KALIS_LOADU_DOUBLE(betaNow49);
KALIS_DOUBLE _beta50  = KALIS_LOADU_DOUBLE(betaNow50);
KALIS_DOUBLE _beta51  = KALIS_LOADU_DOUBLE(betaNow51);
KALIS_DOUBLE _beta52  = KALIS_LOADU_DOUBLE(betaNow52);
KALIS_DOUBLE _beta53  = KALIS_LOADU_DOUBLE(betaNow53);
KALIS_DOUBLE _beta54  = KALIS_LOADU_DOUBLE(betaNow54);
KALIS_DOUBLE _beta55  = KALIS_LOADU_DOUBLE(betaNow55);
KALIS_DOUBLE _beta56  = KALIS_LOADU_DOUBLE(betaNow56);
KALIS_DOUBLE _beta57  = KALIS_LOADU_DOUBLE(betaNow57);
KALIS_DOUBLE _beta58  = KALIS_LOADU_DOUBLE(betaNow58);
KALIS_DOUBLE _beta59  = KALIS_LOADU_DOUBLE(betaNow59);
KALIS_DOUBLE _beta60  = KALIS_LOADU_DOUBLE(betaNow60);
KALIS_DOUBLE _beta61  = KALIS_LOADU_DOUBLE(betaNow61);
KALIS_DOUBLE _beta62  = KALIS_LOADU_DOUBLE(betaNow62);
KALIS_DOUBLE _beta63  = KALIS_LOADU_DOUBLE(betaNow63);

KALIS_DOUBLE _theta0 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(0*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(0*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta1 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(1*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(1*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta2 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(2*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(2*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta3 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(3*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(3*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta4 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(4*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(4*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta5 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(5*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(5*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta6 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(6*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(6*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta7 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(7*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(7*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta8 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(8*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(8*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta9 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(9*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(9*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta10 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(10*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(10*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta11 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(11*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(11*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta12 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(12*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(12*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta13 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(13*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(13*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta14 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(14*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(14*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta15 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(15*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(15*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta16 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(16*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(16*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta17 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(17*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(17*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta18 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(18*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(18*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta19 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(19*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(19*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta20 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(20*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(20*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta21 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(21*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(21*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta22 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(22*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(22*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta23 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(23*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(23*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta24 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(24*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(24*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta25 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(25*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(25*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta26 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(26*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(26*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta27 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(27*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(27*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta28 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(28*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(28*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta29 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(29*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(29*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta30 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(30*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(30*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta31 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(31*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(31*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta32 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(32*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(32*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta33 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(33*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(33*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta34 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(34*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(34*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta35 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(35*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(35*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta36 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(36*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(36*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta37 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(37*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(37*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta38 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(38*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(38*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta39 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(39*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(39*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta40 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(40*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(40*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta41 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(41*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(41*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta42 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(42*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(42*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta43 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(43*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(43*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta44 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(44*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(44*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta45 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(45*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(45*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta46 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(46*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(46*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta47 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(47*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(47*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta48 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(48*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(48*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta49 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(49*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(49*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta50 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(50*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(50*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta51 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(51*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(51*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta52 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(52*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(52*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta53 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(53*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(53*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta54 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(54*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(54*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta55 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(55*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(55*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta56 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(56*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(56*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta57 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(57*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(57*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta58 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(58*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(58*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta59 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(59*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(59*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta60 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(60*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(60*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta61 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(61*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(61*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta62 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(62*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(62*KALIS_DOUBLEVEC_SIZE))%32));
KALIS_DOUBLE _theta63 = KALIS_SPREADBITSTO_DOUBLE((HB[(donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(63*KALIS_DOUBLEVEC_SIZE))/32]) >> ((donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL)+(63*KALIS_DOUBLEVEC_SIZE))%32));

KALIS_DOUBLE _pi0    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (0*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi1    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (1*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi2    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (2*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi3    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (3*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi4    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (4*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi5    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (5*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi6    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (6*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi7    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (7*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi8    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (8*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi9    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (9*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi10    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (10*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi11    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (11*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi12    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (12*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi13    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (13*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi14    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (14*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi15    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (15*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi16    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (16*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi17    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (17*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi18    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (18*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi19    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (19*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi20    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (20*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi21    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (21*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi22    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (22*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi23    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (23*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi24    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (24*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi25    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (25*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi26    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (26*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi27    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (27*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi28    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (28*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi29    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (29*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi30    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (30*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi31    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (31*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi32    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (32*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi33    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (33*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi34    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (34*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi35    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (35*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi36    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (36*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi37    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (37*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi38    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (38*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi39    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (39*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi40    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (40*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi41    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (41*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi42    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (42*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi43    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (43*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi44    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (44*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi45    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (45*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi46    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (46*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi47    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (47*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi48    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (48*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi49    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (49*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi50    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (50*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi51    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (51*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi52    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (52*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi53    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (53*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi54    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (54*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi55    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (55*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi56    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (56*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi57    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (57*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi58    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (58*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi59    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (59*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi60    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (60*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi61    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (61*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi62    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (62*KALIS_DOUBLEVEC_SIZE));
KALIS_DOUBLE _pi63    = KALIS_LOADU_DOUBLE(PiRow + donoroff*(32*KALIS_INTVEC_SIZE) + donor*(KALIS_DOUBLEVEC_SIZE*KALIS_UNROLL) + (63*KALIS_DOUBLEVEC_SIZE));

_beta0               = KALIS_FMA_DOUBLE(_beta0, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta1               = KALIS_FMA_DOUBLE(_beta1, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta2               = KALIS_FMA_DOUBLE(_beta2, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta3               = KALIS_FMA_DOUBLE(_beta3, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta4               = KALIS_FMA_DOUBLE(_beta4, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta5               = KALIS_FMA_DOUBLE(_beta5, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta6               = KALIS_FMA_DOUBLE(_beta6, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta7               = KALIS_FMA_DOUBLE(_beta7, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta8               = KALIS_FMA_DOUBLE(_beta8, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta9               = KALIS_FMA_DOUBLE(_beta9, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta10               = KALIS_FMA_DOUBLE(_beta10, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta11               = KALIS_FMA_DOUBLE(_beta11, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta12               = KALIS_FMA_DOUBLE(_beta12, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta13               = KALIS_FMA_DOUBLE(_beta13, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta14               = KALIS_FMA_DOUBLE(_beta14, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta15               = KALIS_FMA_DOUBLE(_beta15, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta16               = KALIS_FMA_DOUBLE(_beta16, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta17               = KALIS_FMA_DOUBLE(_beta17, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta18               = KALIS_FMA_DOUBLE(_beta18, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta19               = KALIS_FMA_DOUBLE(_beta19, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta20               = KALIS_FMA_DOUBLE(_beta20, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta21               = KALIS_FMA_DOUBLE(_beta21, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta22               = KALIS_FMA_DOUBLE(_beta22, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta23               = KALIS_FMA_DOUBLE(_beta23, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta24               = KALIS_FMA_DOUBLE(_beta24, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta25               = KALIS_FMA_DOUBLE(_beta25, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta26               = KALIS_FMA_DOUBLE(_beta26, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta27               = KALIS_FMA_DOUBLE(_beta27, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta28               = KALIS_FMA_DOUBLE(_beta28, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta29               = KALIS_FMA_DOUBLE(_beta29, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta30               = KALIS_FMA_DOUBLE(_beta30, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta31               = KALIS_FMA_DOUBLE(_beta31, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta32               = KALIS_FMA_DOUBLE(_beta32, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta33               = KALIS_FMA_DOUBLE(_beta33, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta34               = KALIS_FMA_DOUBLE(_beta34, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta35               = KALIS_FMA_DOUBLE(_beta35, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta36               = KALIS_FMA_DOUBLE(_beta36, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta37               = KALIS_FMA_DOUBLE(_beta37, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta38               = KALIS_FMA_DOUBLE(_beta38, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta39               = KALIS_FMA_DOUBLE(_beta39, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta40               = KALIS_FMA_DOUBLE(_beta40, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta41               = KALIS_FMA_DOUBLE(_beta41, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta42               = KALIS_FMA_DOUBLE(_beta42, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta43               = KALIS_FMA_DOUBLE(_beta43, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta44               = KALIS_FMA_DOUBLE(_beta44, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta45               = KALIS_FMA_DOUBLE(_beta45, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta46               = KALIS_FMA_DOUBLE(_beta46, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta47               = KALIS_FMA_DOUBLE(_beta47, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta48               = KALIS_FMA_DOUBLE(_beta48, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta49               = KALIS_FMA_DOUBLE(_beta49, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta50               = KALIS_FMA_DOUBLE(_beta50, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta51               = KALIS_FMA_DOUBLE(_beta51, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta52               = KALIS_FMA_DOUBLE(_beta52, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta53               = KALIS_FMA_DOUBLE(_beta53, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta54               = KALIS_FMA_DOUBLE(_beta54, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta55               = KALIS_FMA_DOUBLE(_beta55, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta56               = KALIS_FMA_DOUBLE(_beta56, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta57               = KALIS_FMA_DOUBLE(_beta57, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta58               = KALIS_FMA_DOUBLE(_beta58, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta59               = KALIS_FMA_DOUBLE(_beta59, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta60               = KALIS_FMA_DOUBLE(_beta60, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta61               = KALIS_FMA_DOUBLE(_beta61, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta62               = KALIS_FMA_DOUBLE(_beta62, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])
_beta63               = KALIS_FMA_DOUBLE(_beta63, _omRhoDivG, _rho); // (rho + [theta*beta] * [(1-rho)/g])

#if KALIS_MU == MU_SCALAR
_theta0              = KALIS_FMA_DOUBLE(_theta0, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta1              = KALIS_FMA_DOUBLE(_theta1, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta2              = KALIS_FMA_DOUBLE(_theta2, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta3              = KALIS_FMA_DOUBLE(_theta3, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta4              = KALIS_FMA_DOUBLE(_theta4, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta5              = KALIS_FMA_DOUBLE(_theta5, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta6              = KALIS_FMA_DOUBLE(_theta6, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta7              = KALIS_FMA_DOUBLE(_theta7, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta8              = KALIS_FMA_DOUBLE(_theta8, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta9              = KALIS_FMA_DOUBLE(_theta9, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta10              = KALIS_FMA_DOUBLE(_theta10, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta11              = KALIS_FMA_DOUBLE(_theta11, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta12              = KALIS_FMA_DOUBLE(_theta12, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta13              = KALIS_FMA_DOUBLE(_theta13, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta14              = KALIS_FMA_DOUBLE(_theta14, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta15              = KALIS_FMA_DOUBLE(_theta15, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta16              = KALIS_FMA_DOUBLE(_theta16, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta17              = KALIS_FMA_DOUBLE(_theta17, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta18              = KALIS_FMA_DOUBLE(_theta18, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta19              = KALIS_FMA_DOUBLE(_theta19, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta20              = KALIS_FMA_DOUBLE(_theta20, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta21              = KALIS_FMA_DOUBLE(_theta21, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta22              = KALIS_FMA_DOUBLE(_theta22, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta23              = KALIS_FMA_DOUBLE(_theta23, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta24              = KALIS_FMA_DOUBLE(_theta24, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta25              = KALIS_FMA_DOUBLE(_theta25, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta26              = KALIS_FMA_DOUBLE(_theta26, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta27              = KALIS_FMA_DOUBLE(_theta27, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta28              = KALIS_FMA_DOUBLE(_theta28, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta29              = KALIS_FMA_DOUBLE(_theta29, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta30              = KALIS_FMA_DOUBLE(_theta30, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta31              = KALIS_FMA_DOUBLE(_theta31, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta32              = KALIS_FMA_DOUBLE(_theta32, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta33              = KALIS_FMA_DOUBLE(_theta33, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta34              = KALIS_FMA_DOUBLE(_theta34, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta35              = KALIS_FMA_DOUBLE(_theta35, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta36              = KALIS_FMA_DOUBLE(_theta36, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta37              = KALIS_FMA_DOUBLE(_theta37, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta38              = KALIS_FMA_DOUBLE(_theta38, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta39              = KALIS_FMA_DOUBLE(_theta39, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta40              = KALIS_FMA_DOUBLE(_theta40, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta41              = KALIS_FMA_DOUBLE(_theta41, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta42              = KALIS_FMA_DOUBLE(_theta42, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta43              = KALIS_FMA_DOUBLE(_theta43, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta44              = KALIS_FMA_DOUBLE(_theta44, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta45              = KALIS_FMA_DOUBLE(_theta45, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta46              = KALIS_FMA_DOUBLE(_theta46, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta47              = KALIS_FMA_DOUBLE(_theta47, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta48              = KALIS_FMA_DOUBLE(_theta48, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta49              = KALIS_FMA_DOUBLE(_theta49, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta50              = KALIS_FMA_DOUBLE(_theta50, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta51              = KALIS_FMA_DOUBLE(_theta51, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta52              = KALIS_FMA_DOUBLE(_theta52, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta53              = KALIS_FMA_DOUBLE(_theta53, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta54              = KALIS_FMA_DOUBLE(_theta54, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta55              = KALIS_FMA_DOUBLE(_theta55, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta56              = KALIS_FMA_DOUBLE(_theta56, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta57              = KALIS_FMA_DOUBLE(_theta57, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta58              = KALIS_FMA_DOUBLE(_theta58, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta59              = KALIS_FMA_DOUBLE(_theta59, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta60              = KALIS_FMA_DOUBLE(_theta60, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta61              = KALIS_FMA_DOUBLE(_theta61, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta62              = KALIS_FMA_DOUBLE(_theta62, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
_theta63              = KALIS_FMA_DOUBLE(_theta63, _muTmp1, _muTmp2); // theta = H * (2*mu - 1) - mu + 1
#elif KALIS_MU == MU_VECTOR
_theta0              = KALIS_FMA_DOUBLE(_theta0, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta1              = KALIS_FMA_DOUBLE(_theta1, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta2              = KALIS_FMA_DOUBLE(_theta2, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta3              = KALIS_FMA_DOUBLE(_theta3, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta4              = KALIS_FMA_DOUBLE(_theta4, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta5              = KALIS_FMA_DOUBLE(_theta5, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta6              = KALIS_FMA_DOUBLE(_theta6, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta7              = KALIS_FMA_DOUBLE(_theta7, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta8              = KALIS_FMA_DOUBLE(_theta8, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta9              = KALIS_FMA_DOUBLE(_theta9, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta10              = KALIS_FMA_DOUBLE(_theta10, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta11              = KALIS_FMA_DOUBLE(_theta11, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta12              = KALIS_FMA_DOUBLE(_theta12, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta13              = KALIS_FMA_DOUBLE(_theta13, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta14              = KALIS_FMA_DOUBLE(_theta14, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta15              = KALIS_FMA_DOUBLE(_theta15, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta16              = KALIS_FMA_DOUBLE(_theta16, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta17              = KALIS_FMA_DOUBLE(_theta17, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta18              = KALIS_FMA_DOUBLE(_theta18, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta19              = KALIS_FMA_DOUBLE(_theta19, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta20              = KALIS_FMA_DOUBLE(_theta20, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta21              = KALIS_FMA_DOUBLE(_theta21, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta22              = KALIS_FMA_DOUBLE(_theta22, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta23              = KALIS_FMA_DOUBLE(_theta23, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta24              = KALIS_FMA_DOUBLE(_theta24, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta25              = KALIS_FMA_DOUBLE(_theta25, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta26              = KALIS_FMA_DOUBLE(_theta26, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta27              = KALIS_FMA_DOUBLE(_theta27, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta28              = KALIS_FMA_DOUBLE(_theta28, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta29              = KALIS_FMA_DOUBLE(_theta29, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta30              = KALIS_FMA_DOUBLE(_theta30, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta31              = KALIS_FMA_DOUBLE(_theta31, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta32              = KALIS_FMA_DOUBLE(_theta32, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta33              = KALIS_FMA_DOUBLE(_theta33, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta34              = KALIS_FMA_DOUBLE(_theta34, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta35              = KALIS_FMA_DOUBLE(_theta35, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta36              = KALIS_FMA_DOUBLE(_theta36, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta37              = KALIS_FMA_DOUBLE(_theta37, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta38              = KALIS_FMA_DOUBLE(_theta38, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta39              = KALIS_FMA_DOUBLE(_theta39, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta40              = KALIS_FMA_DOUBLE(_theta40, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta41              = KALIS_FMA_DOUBLE(_theta41, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta42              = KALIS_FMA_DOUBLE(_theta42, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta43              = KALIS_FMA_DOUBLE(_theta43, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta44              = KALIS_FMA_DOUBLE(_theta44, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta45              = KALIS_FMA_DOUBLE(_theta45, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta46              = KALIS_FMA_DOUBLE(_theta46, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta47              = KALIS_FMA_DOUBLE(_theta47, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta48              = KALIS_FMA_DOUBLE(_theta48, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta49              = KALIS_FMA_DOUBLE(_theta49, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta50              = KALIS_FMA_DOUBLE(_theta50, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta51              = KALIS_FMA_DOUBLE(_theta51, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta52              = KALIS_FMA_DOUBLE(_theta52, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta53              = KALIS_FMA_DOUBLE(_theta53, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta54              = KALIS_FMA_DOUBLE(_theta54, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta55              = KALIS_FMA_DOUBLE(_theta55, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta56              = KALIS_FMA_DOUBLE(_theta56, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta57              = KALIS_FMA_DOUBLE(_theta57, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta58              = KALIS_FMA_DOUBLE(_theta58, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta59              = KALIS_FMA_DOUBLE(_theta59, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta60              = KALIS_FMA_DOUBLE(_theta60, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta61              = KALIS_FMA_DOUBLE(_theta61, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta62              = KALIS_FMA_DOUBLE(_theta62, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
_theta63              = KALIS_FMA_DOUBLE(_theta63, _muTmp1b, _muTmp2b); // theta = H * (2*mu - 1) - mu + 1
#endif

_beta0              = KALIS_MUL_DOUBLE(_beta0, _theta0); // (theta*beta)
_beta1              = KALIS_MUL_DOUBLE(_beta1, _theta1); // (theta*beta)
_beta2              = KALIS_MUL_DOUBLE(_beta2, _theta2); // (theta*beta)
_beta3              = KALIS_MUL_DOUBLE(_beta3, _theta3); // (theta*beta)
_beta4              = KALIS_MUL_DOUBLE(_beta4, _theta4); // (theta*beta)
_beta5              = KALIS_MUL_DOUBLE(_beta5, _theta5); // (theta*beta)
_beta6              = KALIS_MUL_DOUBLE(_beta6, _theta6); // (theta*beta)
_beta7              = KALIS_MUL_DOUBLE(_beta7, _theta7); // (theta*beta)
_beta8              = KALIS_MUL_DOUBLE(_beta8, _theta8); // (theta*beta)
_beta9              = KALIS_MUL_DOUBLE(_beta9, _theta9); // (theta*beta)
_beta10              = KALIS_MUL_DOUBLE(_beta10, _theta10); // (theta*beta)
_beta11              = KALIS_MUL_DOUBLE(_beta11, _theta11); // (theta*beta)
_beta12              = KALIS_MUL_DOUBLE(_beta12, _theta12); // (theta*beta)
_beta13              = KALIS_MUL_DOUBLE(_beta13, _theta13); // (theta*beta)
_beta14              = KALIS_MUL_DOUBLE(_beta14, _theta14); // (theta*beta)
_beta15              = KALIS_MUL_DOUBLE(_beta15, _theta15); // (theta*beta)
_beta16              = KALIS_MUL_DOUBLE(_beta16, _theta16); // (theta*beta)
_beta17              = KALIS_MUL_DOUBLE(_beta17, _theta17); // (theta*beta)
_beta18              = KALIS_MUL_DOUBLE(_beta18, _theta18); // (theta*beta)
_beta19              = KALIS_MUL_DOUBLE(_beta19, _theta19); // (theta*beta)
_beta20              = KALIS_MUL_DOUBLE(_beta20, _theta20); // (theta*beta)
_beta21              = KALIS_MUL_DOUBLE(_beta21, _theta21); // (theta*beta)
_beta22              = KALIS_MUL_DOUBLE(_beta22, _theta22); // (theta*beta)
_beta23              = KALIS_MUL_DOUBLE(_beta23, _theta23); // (theta*beta)
_beta24              = KALIS_MUL_DOUBLE(_beta24, _theta24); // (theta*beta)
_beta25              = KALIS_MUL_DOUBLE(_beta25, _theta25); // (theta*beta)
_beta26              = KALIS_MUL_DOUBLE(_beta26, _theta26); // (theta*beta)
_beta27              = KALIS_MUL_DOUBLE(_beta27, _theta27); // (theta*beta)
_beta28              = KALIS_MUL_DOUBLE(_beta28, _theta28); // (theta*beta)
_beta29              = KALIS_MUL_DOUBLE(_beta29, _theta29); // (theta*beta)
_beta30              = KALIS_MUL_DOUBLE(_beta30, _theta30); // (theta*beta)
_beta31              = KALIS_MUL_DOUBLE(_beta31, _theta31); // (theta*beta)
_beta32              = KALIS_MUL_DOUBLE(_beta32, _theta32); // (theta*beta)
_beta33              = KALIS_MUL_DOUBLE(_beta33, _theta33); // (theta*beta)
_beta34              = KALIS_MUL_DOUBLE(_beta34, _theta34); // (theta*beta)
_beta35              = KALIS_MUL_DOUBLE(_beta35, _theta35); // (theta*beta)
_beta36              = KALIS_MUL_DOUBLE(_beta36, _theta36); // (theta*beta)
_beta37              = KALIS_MUL_DOUBLE(_beta37, _theta37); // (theta*beta)
_beta38              = KALIS_MUL_DOUBLE(_beta38, _theta38); // (theta*beta)
_beta39              = KALIS_MUL_DOUBLE(_beta39, _theta39); // (theta*beta)
_beta40              = KALIS_MUL_DOUBLE(_beta40, _theta40); // (theta*beta)
_beta41              = KALIS_MUL_DOUBLE(_beta41, _theta41); // (theta*beta)
_beta42              = KALIS_MUL_DOUBLE(_beta42, _theta42); // (theta*beta)
_beta43              = KALIS_MUL_DOUBLE(_beta43, _theta43); // (theta*beta)
_beta44              = KALIS_MUL_DOUBLE(_beta44, _theta44); // (theta*beta)
_beta45              = KALIS_MUL_DOUBLE(_beta45, _theta45); // (theta*beta)
_beta46              = KALIS_MUL_DOUBLE(_beta46, _theta46); // (theta*beta)
_beta47              = KALIS_MUL_DOUBLE(_beta47, _theta47); // (theta*beta)
_beta48              = KALIS_MUL_DOUBLE(_beta48, _theta48); // (theta*beta)
_beta49              = KALIS_MUL_DOUBLE(_beta49, _theta49); // (theta*beta)
_beta50              = KALIS_MUL_DOUBLE(_beta50, _theta50); // (theta*beta)
_beta51              = KALIS_MUL_DOUBLE(_beta51, _theta51); // (theta*beta)
_beta52              = KALIS_MUL_DOUBLE(_beta52, _theta52); // (theta*beta)
_beta53              = KALIS_MUL_DOUBLE(_beta53, _theta53); // (theta*beta)
_beta54              = KALIS_MUL_DOUBLE(_beta54, _theta54); // (theta*beta)
_beta55              = KALIS_MUL_DOUBLE(_beta55, _theta55); // (theta*beta)
_beta56              = KALIS_MUL_DOUBLE(_beta56, _theta56); // (theta*beta)
_beta57              = KALIS_MUL_DOUBLE(_beta57, _theta57); // (theta*beta)
_beta58              = KALIS_MUL_DOUBLE(_beta58, _theta58); // (theta*beta)
_beta59              = KALIS_MUL_DOUBLE(_beta59, _theta59); // (theta*beta)
_beta60              = KALIS_MUL_DOUBLE(_beta60, _theta60); // (theta*beta)
_beta61              = KALIS_MUL_DOUBLE(_beta61, _theta61); // (theta*beta)
_beta62              = KALIS_MUL_DOUBLE(_beta62, _theta62); // (theta*beta)
_beta63              = KALIS_MUL_DOUBLE(_beta63, _theta63); // (theta*beta)

_g                   = KALIS_FMA_DOUBLE(_pi0, _beta0, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi1, _beta1, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi2, _beta2, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi3, _beta3, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi4, _beta4, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi5, _beta5, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi6, _beta6, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi7, _beta7, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi8, _beta8, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi9, _beta9, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi10, _beta10, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi11, _beta11, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi12, _beta12, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi13, _beta13, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi14, _beta14, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi15, _beta15, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi16, _beta16, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi17, _beta17, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi18, _beta18, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi19, _beta19, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi20, _beta20, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi21, _beta21, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi22, _beta22, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi23, _beta23, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi24, _beta24, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi25, _beta25, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi26, _beta26, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi27, _beta27, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi28, _beta28, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi29, _beta29, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi30, _beta30, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi31, _beta31, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi32, _beta32, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi33, _beta33, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi34, _beta34, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi35, _beta35, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi36, _beta36, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi37, _beta37, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi38, _beta38, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi39, _beta39, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi40, _beta40, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi41, _beta41, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi42, _beta42, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi43, _beta43, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi44, _beta44, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi45, _beta45, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi46, _beta46, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi47, _beta47, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi48, _beta48, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi49, _beta49, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi50, _beta50, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi51, _beta51, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi52, _beta52, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi53, _beta53, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi54, _beta54, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi55, _beta55, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi56, _beta56, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi57, _beta57, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi58, _beta58, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi59, _beta59, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi60, _beta60, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi61, _beta61, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi62, _beta62, _g); // g += Pi * (theta*beta)
_g                   = KALIS_FMA_DOUBLE(_pi63, _beta63, _g); // g += Pi * (theta*beta)

KALIS_STOREU_DOUBLE(betaNow0, _beta0);
KALIS_STOREU_DOUBLE(betaNow1, _beta1);
KALIS_STOREU_DOUBLE(betaNow2, _beta2);
KALIS_STOREU_DOUBLE(betaNow3, _beta3);
KALIS_STOREU_DOUBLE(betaNow4, _beta4);
KALIS_STOREU_DOUBLE(betaNow5, _beta5);
KALIS_STOREU_DOUBLE(betaNow6, _beta6);
KALIS_STOREU_DOUBLE(betaNow7, _beta7);
KALIS_STOREU_DOUBLE(betaNow8, _beta8);
KALIS_STOREU_DOUBLE(betaNow9, _beta9);
KALIS_STOREU_DOUBLE(betaNow10, _beta10);
KALIS_STOREU_DOUBLE(betaNow11, _beta11);
KALIS_STOREU_DOUBLE(betaNow12, _beta12);
KALIS_STOREU_DOUBLE(betaNow13, _beta13);
KALIS_STOREU_DOUBLE(betaNow14, _beta14);
KALIS_STOREU_DOUBLE(betaNow15, _beta15);
KALIS_STOREU_DOUBLE(betaNow16, _beta16);
KALIS_STOREU_DOUBLE(betaNow17, _beta17);
KALIS_STOREU_DOUBLE(betaNow18, _beta18);
KALIS_STOREU_DOUBLE(betaNow19, _beta19);
KALIS_STOREU_DOUBLE(betaNow20, _beta20);
KALIS_STOREU_DOUBLE(betaNow21, _beta21);
KALIS_STOREU_DOUBLE(betaNow22, _beta22);
KALIS_STOREU_DOUBLE(betaNow23, _beta23);
KALIS_STOREU_DOUBLE(betaNow24, _beta24);
KALIS_STOREU_DOUBLE(betaNow25, _beta25);
KALIS_STOREU_DOUBLE(betaNow26, _beta26);
KALIS_STOREU_DOUBLE(betaNow27, _beta27);
KALIS_STOREU_DOUBLE(betaNow28, _beta28);
KALIS_STOREU_DOUBLE(betaNow29, _beta29);
KALIS_STOREU_DOUBLE(betaNow30, _beta30);
KALIS_STOREU_DOUBLE(betaNow31, _beta31);
KALIS_STOREU_DOUBLE(betaNow32, _beta32);
KALIS_STOREU_DOUBLE(betaNow33, _beta33);
KALIS_STOREU_DOUBLE(betaNow34, _beta34);
KALIS_STOREU_DOUBLE(betaNow35, _beta35);
KALIS_STOREU_DOUBLE(betaNow36, _beta36);
KALIS_STOREU_DOUBLE(betaNow37, _beta37);
KALIS_STOREU_DOUBLE(betaNow38, _beta38);
KALIS_STOREU_DOUBLE(betaNow39, _beta39);
KALIS_STOREU_DOUBLE(betaNow40, _beta40);
KALIS_STOREU_DOUBLE(betaNow41, _beta41);
KALIS_STOREU_DOUBLE(betaNow42, _beta42);
KALIS_STOREU_DOUBLE(betaNow43, _beta43);
KALIS_STOREU_DOUBLE(betaNow44, _beta44);
KALIS_STOREU_DOUBLE(betaNow45, _beta45);
KALIS_STOREU_DOUBLE(betaNow46, _beta46);
KALIS_STOREU_DOUBLE(betaNow47, _beta47);
KALIS_STOREU_DOUBLE(betaNow48, _beta48);
KALIS_STOREU_DOUBLE(betaNow49, _beta49);
KALIS_STOREU_DOUBLE(betaNow50, _beta50);
KALIS_STOREU_DOUBLE(betaNow51, _beta51);
KALIS_STOREU_DOUBLE(betaNow52, _beta52);
KALIS_STOREU_DOUBLE(betaNow53, _beta53);
KALIS_STOREU_DOUBLE(betaNow54, _beta54);
KALIS_STOREU_DOUBLE(betaNow55, _beta55);
KALIS_STOREU_DOUBLE(betaNow56, _beta56);
KALIS_STOREU_DOUBLE(betaNow57, _beta57);
KALIS_STOREU_DOUBLE(betaNow58, _beta58);
KALIS_STOREU_DOUBLE(betaNow59, _beta59);
KALIS_STOREU_DOUBLE(betaNow60, _beta60);
KALIS_STOREU_DOUBLE(betaNow61, _beta61);
KALIS_STOREU_DOUBLE(betaNow62, _beta62);
KALIS_STOREU_DOUBLE(betaNow63, _beta63);
